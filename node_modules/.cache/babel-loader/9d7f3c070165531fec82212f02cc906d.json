{"ast":null,"code":"var _jsxFileName = \"/Users/r2h/Desktop/tic-tak-toe/tic-tac-toe/src/Components/Board/Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Square from '../Square/Square';\nimport r2h from '../../img/r2h.png';\nimport fellowship from '../../img/fellowships.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Board = () => {\n  _s();\n\n  const initialBoard = Array(9).fill(null);\n  const [squares, setSquares] = useState(initialBoard);\n  const [playerXIsNext, setPlayerXIsNext] = useState(true); // const winner = calculateWinner(squares)\n\n  const handleClick = e => {\n    const newSquares = [...squares];\n    const winnerDeclared = Boolean(calculateWinner(squares));\n    if (winnerDeclared) return;\n    newSquares[e] = playerXIsNext ? \"X\" : \"O\";\n    setSquares(newSquares);\n    setPlayerXIsNext(!playerXIsNext);\n  };\n\n  const getStatus = () => {\n    if (winner) {\n      return `Congrats Player ${winner}, you won`;\n    } else {\n      return `Next Player is Player ${playerXIsNext ? \"X\" : \"O\"}`;\n    }\n  };\n\n  const renderSquare = i => {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: squares[i],\n      onClick: () => handleClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  };\n\n  const calculateWinner = squares => {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]; // shows all of the winning combinations (\"lines\")\n\n    for (let line of lines) {\n      const [a, b, c] = line;\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) return squares[a];\n    }\n\n    return null;\n  };\n\n  const winner = calculateWinner(squares);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main--container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: r2h,\n          alt: \"r2h logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: fellowship,\n          alt: \"fellowship\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: getStatus()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board--container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board--row\",\n            children: [renderSquare(0), renderSquare(1), renderSquare(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board--row\",\n            children: [renderSquare(3), renderSquare(4), renderSquare(5)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board--row\",\n            children: [renderSquare(6), renderSquare(7), renderSquare(8)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Board, \"6bAUO5W/S3KNNK34hrXC2mEKSZU=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/r2h/Desktop/tic-tak-toe/tic-tac-toe/src/Components/Board/Board.js"],"names":["React","useState","Square","r2h","fellowship","Board","initialBoard","Array","fill","squares","setSquares","playerXIsNext","setPlayerXIsNext","handleClick","e","newSquares","winnerDeclared","Boolean","calculateWinner","getStatus","winner","renderSquare","i","lines","line","a","b","c"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Square from '../Square/Square';\nimport r2h from '../../img/r2h.png'\nimport fellowship from '../../img/fellowships.png'\n\nconst Board = () => {\n    const initialBoard = Array(9).fill(null)\n    const [squares, setSquares] = useState(initialBoard)\n    const[playerXIsNext, setPlayerXIsNext] = useState(true)\n    // const winner = calculateWinner(squares)\n\n    const handleClick = (e)=>{\n        const newSquares=[...squares]\n        const winnerDeclared = Boolean(calculateWinner(squares))\n        if (winnerDeclared) return\n        newSquares[e] = playerXIsNext ? \"X\" : \"O\"\n        setSquares(newSquares)\n        setPlayerXIsNext(!playerXIsNext)\n\n    }\n\n    const getStatus = () =>{\n        if (winner) {\n            return `Congrats Player ${winner}, you won`\n        } else{\n            return `Next Player is Player ${playerXIsNext ? \"X\" : \"O\"}`\n        }\n    }\n    const renderSquare = (i) => {\n        return <Square value={squares[i]} onClick={() => handleClick(i)}/>\n    }\n\n    const calculateWinner = (squares) =>{\n        \n        \n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ]; // shows all of the winning combinations (\"lines\")\n        for(let line of lines){\n            const [a,b,c] = line\n            if(\n                squares[a] &&\n                squares[a] === squares[b] &&\n                squares[a] === squares[c]\n            )\n            return squares[a]\n        }\n        return (null)\n        \n    }\n    const winner = calculateWinner(squares)\n\n    return (\n        <>\n            <main className=\"main--container\">\n                <div className=\"logo\">\n                    <img src={r2h} alt=\"r2h logo\" />\n                    <img src={fellowship} alt=\"fellowship\" />\n                </div>\n                <div className=\"status\">\n                    {getStatus()}\n                </div>\n                <div className=\"board--container\">\n                    <div className=\"board\">\n                        <div className=\"board--row\">\n                            {renderSquare(0)}\n                            {renderSquare(1)}\n                            {renderSquare(2)}\n                        </div>\n                        <div className=\"board--row\">\n                            {renderSquare(3)}\n                            {renderSquare(4)}\n                            {renderSquare(5)}\n                        </div>\n                        <div className=\"board--row\">\n                            {renderSquare(6)}\n                            {renderSquare(7)}\n                            {renderSquare(8)}\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </>\n    )\n}\nexport default Board;"]},"metadata":{},"sourceType":"module"}